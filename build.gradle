plugins {
    id 'org.springframework.boot' version '2.4.5'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'jacoco'
    id 'java-library'
    id 'com.github.kt3k.coveralls' version '2.8.4'
    id 'checkstyle'
    id 'com.github.hierynomus.license' version '0.15.0'
    id 'project-report'
    id "com.github.spotbugs" version "4.6.0"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    google()
    jcenter()
}

ext {
    set('testcontainersVersion', "1.15.3")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'redis.clients:jedis:3.6.0'
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.1.4'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.session:spring-session-core'
    implementation 'org.springframework.session:spring-session-data-redis'
    implementation 'org.slf4j:slf4j-api:1.7.30'
    implementation 'ch.qos.logback:logback-core:1.2.3'
    implementation 'ch.qos.logback:logback-classic:1.2.3'
    implementation 'com.github.javafaker:javafaker:1.0.2'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'mysql:mysql-connector-java'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:mysql'
    testImplementation 'com.github.javafaker:javafaker:1.0.2'
}

dependencyManagement {
    imports {
        mavenBom "org.testcontainers:testcontainers-bom:${testcontainersVersion}"
    }
}

test {
    useJUnitPlatform()
}

license {
    header file("$rootDir/devtool/license/HEADER")
}

checkstyle {
    toolVersion = '8.39'
    configFile file("$rootDir/devtool/checkstyle/checkstyle.xml")
    //ignoreFailures true
}

jacoco {
    reportsDir = file("$buildDir/reports/jacoco")
}

jacocoTestReport {
    dependsOn test
}

task jacocoReport(type: JacocoReport) {
    reports {
        html.enabled true
        xml.enabled true
        csv.enabled false
        xml.destination file("${buildDir}/reports/jacoco/test/jacocoTestReport.xml")
    }
}

spotbugs {
    effort = "max"
    reportLevel = "high"
}

spotbugsMain {
    reports {
        html {
            enabled = true
            destination = file("$buildDir/reports/spotbugs/main.html")
            stylesheet = 'fancy-hist.xsl'
        }
    }
}

spotbugsTest {
    reports {
        html {
            enabled = true
            destination = file("$buildDir/reports/spotbugs/test.html")
            stylesheet = 'fancy-hist.xsl'
        }
    }
}
